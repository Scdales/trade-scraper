# this is required to proxy Grafana Live WebSocket connections.
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

upstream grafana {
  server grafana:3000;
}

server {
  listen 80;
  server_name _;
  return 301 https://$host$request_uri;
}

server {
  access_log   /dev/stdout;
  access_log   /var/log/local_tee/access.log;
  listen       443 ssl;
  server_name  $external_ip;

  ssl_certificate     /certs/certificate.crt;
  ssl_certificate_key /certs/private.key;

  error_page 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 500 501 502 503 504 505 506 507 508 510 511 /error.html;

  location = /error.html {
    ssi on;
    internal;
    auth_basic off;
    root   /usr/share/nginx/html;
    index  index.html;
  }

  location ^~ /sso/ {
    location /sso/validate {
      proxy_pass http://vouch:9090/validate;
      proxy_set_header Host $http_host;
      proxy_pass_request_body off;
    }

    location = /sso/logout {
      proxy_pass http://vouch:9090/logout?url=https://<SECRET>.uk.auth0.com/v2/logout?client_id=xE4xbEbMizpBVA6XnMZIiWlBk3pUJXY2%26returnTo=https://$external_ip/;
      proxy_set_header Host $http_host;
    }

    proxy_set_header Host $http_host;
    proxy_pass http://vouch:9090/;
  }

  location /auth/ {
      auth_request off;
      # Pretty much mirror your proxy settings here.
      # You can also proxy_pass to the vouch port directly.
      # make sure to get your trailing slashes right!
      proxy_pass http://vouch:9090/auth/; 
      proxy_set_header Host $http_host;
  }

  # uncomment this to forward static content of vouch-proxy
  # used when running vouch-proxy with `testing: true`
  location /static/ {
    proxy_set_header Host $http_host;
    proxy_pass http://vouch:9090/static/;
  }

  location / {
    ssi on;
    root   /usr/share/nginx/html;
    index  index.html;
  }

  location /grafana/ {
    auth_request /sso/validate;
    # root /usr/share/nginx/html;
    # index index.html;

    expires 0;
    add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    add_header Pragma "no-cache";
    
    error_page 401 = @prompt_login;
    proxy_set_header Host $http_host;
    proxy_pass http://grafana;
    # rewrite  ^/grafana/(.*)  /$1 break;
  }

  # Proxy Grafana Live WebSocket connections.
  location /grafana/api/live/ {
    auth_request /sso/validate;
    expires 0;
    add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
    add_header Pragma "no-cache";
    error_page 401 = @prompt_login;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $http_host;
    proxy_pass http://grafana;
    # rewrite  ^/grafana/(.*)  /$1 break;
  }

  location @prompt_login {
    return 302 https://$external_ip/sso/login?url=$scheme://$http_host$request_uri;
  }
}
